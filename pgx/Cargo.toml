[package]
name = "pgx"
version = "0.5.0-beta.0"
authors = ["ZomboDB, LLC <zombodb@gmail.com>"]
license = "MIT"
description = "pgx:  A Rust framework for creating Postgres extensions"
homepage = "https://github.com/zombodb/pgx"
repository = "https://github.com/zombodb/pgx"
documentation = "https://docs.rs/pgx"
categories = ["database"]
keywords = ["database", "postgres", "postgresql", "extension"]
readme = "../README.md"
edition = "2021"
rust-version = "1.58"

[lib]
crate-type = [ "rlib" ]

[features]
default = [ ]
postgrestd = ["pgx-pg-sys/postgrestd"]
pg10 = [ "pgx-pg-sys/pg10" ]
pg11 = [ "pgx-pg-sys/pg11" ]
pg12 = [ "pgx-pg-sys/pg12" ]
pg13 = [ "pgx-pg-sys/pg13" ]
pg14 = [ "pgx-pg-sys/pg14" ]
time-crate = [ ] # TODO(0.6.0): add "dep:time"

[package.metadata.docs.rs]
features = ["pg14"]
no-default-features = true
# Enable `#[cfg(docsrs)]` (https://docs.rs/about/builds#cross-compiling)
rustc-args = ["--cfg", "docsrs"]

[dependencies]
pgx-macros = { path = "../pgx-macros/", version = "=0.5.0-beta.0" }
pgx-pg-sys = { path = "../pgx-pg-sys", version = "=0.5.0-beta.0" }
pgx-utils = { path = "../pgx-utils/", version = "=0.5.0-beta.0" }

# used to internally impl things
once_cell = "1.10.0" # polyfill until std::lazy::OnceCell stabilizes
quote = "1.0.18" # necessary for pgx's SQL generation
seq-macro = "0.3" # impls loops in macros
uuid = { version = "1.0.0", features = [ "v4" ] } # PgLwLock and shmem

# error handling and logging
eyre = "0.6.8"
thiserror = "1.0"
tracing = "0.1.34"
tracing-error = "0.2.0"

# exposed in public API
atomic-traits = "0.3.0" # PgAtomic and shmem init
bitflags = "1.3.2" # BackgroundWorker
bitvec = "1.0" # processing array nullbitmaps
cstr_core = "0.2.5" # no std compat
heapless = "0.7.13" # shmem and PgLwLock
libc = "0.2.126" # FFI type compat
seahash = "4.1.0" # derive(PostgresHash)
serde = { version = "1.0.137", features = [ "derive" ] } # impls on pub types
serde_cbor = "0.11.2" # derive(PostgresType)
serde_json = "1.0.81" # everything JSON
time = { version = "0.3.9", features = ["formatting", "parsing", "alloc", "macros"] } # TODO(0.6.0): add `optional = true`

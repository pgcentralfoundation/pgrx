name: Run PGX tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  pgx_tests:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'nogha')"

    strategy:
      matrix:
        version: ["postgres-10", "postgres-11", "postgres-12", "postgres-13", "postgres-14"]
        os: ["ubuntu-latest"]

    steps:
    - uses: actions/checkout@v2

    - name: Get cargo version
      run: cargo --version

    # Ubuntu system dependencies for Postgres
    - name: Remove old postgres
      run: sudo apt remove -y postgres*

    - name: Set up PostgreSQL Apt Repository
      run: |
        set -x
        sudo apt-get update -y -qq --fix-missing
        sudo apt-get install -y wget gnupg
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update

    - name: Install system dependencies and all PostgreSQL versions
      run: |
        set -x
        pg_ver=$(echo ${{ matrix.version }} | cut -d '-' -f2)
        echo "Installing Postgres version $pg_ver from apt"

        sudo apt-get install -y \
          clang-10 \
          llvm-10 \
          clang \
          gcc \
          make \
          build-essential \
          libz-dev \
          zlib1g-dev \
          strace \
          libssl-dev \
          pkg-config \
          postgresql-$pg_ver \
          postgresql-server-dev-$pg_ver

    - name: Set up Postgres permissions
      run: |
        set -x
        pg_ver=$(echo ${{ matrix.version }} | cut -d '-' -f2)

        sudo chmod a+rwx `/usr/lib/postgresql/$pg_ver/bin/pg_config --pkglibdir` `/usr/lib/postgresql/$pg_ver/bin/pg_config --sharedir`/extension /var/run/postgresql/

    - name: Install cargo-pgx
      run: RUSTFLAGS="-Copt-level=0" cargo install --path cargo-pgx/ --debug

    - name: Run 'cargo pgx init' against system-level ${{ matrix.version }}
      run: |
        set -x
        pg_ver=$(echo ${{ matrix.version }} | cut -d '-' -f2)
        RUSTFLAGS="-Copt-level=0" cargo pgx init --pg$pg_ver /usr/lib/postgresql/$pg_ver/bin/pg_config

    - name: Run base-level tests
      run: |
        set -x
        pg_ver=$(echo ${{ matrix.version }} | cut -d '-' -f2)
        exclude_params=""
        for package in $(find pgx-examples -mindepth 1 -maxdepth 1 -type d -printf '%f\n'); do
          exclude_params+="--exclude $package "
        done

        RUSTFLAGS="-Copt-level=0" RUST_BACKTRACE=1 cargo test --all --features "pg$pg_ver" --no-default-features $exclude_params

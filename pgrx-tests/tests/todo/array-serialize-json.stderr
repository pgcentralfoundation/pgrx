error[E0521]: borrowed data escapes outside of function
  --> tests/todo/array-serialize-json.rs:10:10
   |
9  | fn serde_serialize_array<'dat>(values: Array<'dat, &'dat str>) -> Json {
   |                          ----  ------ `values` is a reference that is only valid in the function body
   |                          |
   |                          lifetime `'dat` defined here
10 |     Json(json! { { "values": values } })
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |          |
   |          `values` escapes the function body here
   |          argument requires that `'dat` must outlive `'static`
   |
   = note: requirement occurs because of the type `pgrx::Array<'_, &str>`, which makes the generic argument `&str` invariant
   = note: the struct `pgrx::Array<'mcx, T>` is invariant over the parameter `T`
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance
note: due to current limitations in the borrow checker, this implies a `'static` lifetime
  --> $CARGO/serde_json-1.0.108/src/value/mod.rs
   |
   |     T: Serialize,
   |        ^^^^^^^^^
   = note: this error originates in the macro `json_internal` which comes from the expansion of the macro `json` (in Nightly builds, run with -Z macro-backtrace for more info)
